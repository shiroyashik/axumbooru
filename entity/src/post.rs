//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.14

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "post")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub user_id: Option<i32>,
    pub creation_time: DateTime,
    pub last_edit_time: Option<DateTime>,
    pub safety: String,
    pub r#type: String,
    pub checksum: String,
    pub source: Option<String>,
    pub file_size: Option<i64>,
    pub image_width: Option<i32>,
    pub image_height: Option<i32>,
    #[sea_orm(column_name = "mime-type")]
    pub mime_type: String,
    pub version: i32,
    pub flags: Option<String>,
    pub checksum_md5: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::user::Entity",
        from = "Column::UserId",
        to = "super::user::Column::Id",
        on_update = "NoAction",
        on_delete = "SetNull"
    )]
    User,
}

impl Related<super::user::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::User.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
